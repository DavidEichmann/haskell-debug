"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const net = require("net");
const os = require("os");
const readline = require("readline");
const PIPE_NAME = "haskell-debug";
var connectionPath = os.platform() == "win32" ?
    "\\\\.\\pipe\\" + PIPE_NAME : `/tmp/${PIPE_NAME}.sock`;
var client = net.connect(connectionPath);
const rl = readline.createInterface({
    input: process.stdin
});
var ignoreOutput = false;
rl.on("line", (text) => {
    if (ignoreOutput) {
        ignoreOutput = false;
        return;
    }
    client.write(text + "\n");
});
var totalData = "";
client.on("data", (data) => {
    onData(data.toString());
});
function onData(data) {
    var newLinePos = data.indexOf("\n");
    if (newLinePos != -1) {
        totalData += data.slice(0, newLinePos);
        onMessage(JSON.parse(totalData));
        totalData = "";
        onData(data.slice(newLinePos + 1));
    }
    else {
        totalData += data;
    }
}
function onMessage(message) {
    if (message.type == "message") {
        process.stdout.write(message.content);
    }
    else if (message.type == "display-command") {
        process.stdout.write(message.command + "\n");
        ignoreOutput = true;
        rl.write("\n");
    }
    else if (message.type == "destroy-prompt") {
        rl.close();
    }
    else if (message.type == "close") {
        process.exit();
    }
    else {
        rl.prompt();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVybWluYWxFY2hvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1Rlcm1pbmFsRWNoby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJCQUE0QjtBQUM1Qix5QkFBMEI7QUFDMUIscUNBQXNDO0FBZ0J0QyxNQUFNLFNBQVMsR0FBRyxlQUFlLENBQUM7QUFFbEMsSUFBSSxjQUFjLEdBQUcsRUFBRSxDQUFDLFFBQVEsRUFBRSxJQUFJLE9BQU87SUFDekMsZUFBZSxHQUFHLFNBQVMsR0FBRyxRQUFRLFNBQVMsT0FBTyxDQUFDO0FBQzNELElBQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFekMsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLGVBQWUsQ0FBQztJQUNoQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7Q0FDdkIsQ0FBQyxDQUFDO0FBRUgsSUFBSSxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBRXpCLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBWTtJQUN2QixFQUFFLENBQUEsQ0FBQyxZQUFZLENBQUMsQ0FBQSxDQUFDO1FBQ2IsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUNyQixNQUFNLENBQUM7SUFDWCxDQUFDO0lBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDOUIsQ0FBQyxDQUFDLENBQUE7QUFFRixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDbkIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFZO0lBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUM1QixDQUFDLENBQUMsQ0FBQTtBQUVGLGdCQUFnQixJQUFZO0lBQ3hCLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEMsRUFBRSxDQUFBLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztRQUNqQixTQUFTLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDdkMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNqQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNELElBQUksQ0FBQSxDQUFDO1FBQ0QsU0FBUyxJQUFJLElBQUksQ0FBQztJQUN0QixDQUFDO0FBQ0wsQ0FBQztBQUVELG1CQUFtQixPQUFnQjtJQUMvQixFQUFFLENBQUEsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLFNBQVMsQ0FBQyxDQUFBLENBQUM7UUFDMUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFDRCxJQUFJLENBQUMsRUFBRSxDQUFBLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxpQkFBaUIsQ0FBQyxDQUFBLENBQUM7UUFDdkMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQztRQUM3QyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUNELElBQUksQ0FBQyxFQUFFLENBQUEsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLGdCQUFnQixDQUFDLENBQUEsQ0FBQztRQUN0QyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDO0lBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQSxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLENBQUEsQ0FBQztRQUM3QixPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUNELElBQUksQ0FBQSxDQUFDO1FBQ0QsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5ldCA9IHJlcXVpcmUoXCJuZXRcIik7XG5pbXBvcnQgb3MgPSByZXF1aXJlKFwib3NcIik7XG5pbXBvcnQgcmVhZGxpbmUgPSByZXF1aXJlKFwicmVhZGxpbmVcIik7XG5cbnR5cGUgTWVzc2FnZSA9IHtcbiAgICB0eXBlOiBcIm1lc3NhZ2VcIjtcbiAgICBjb250ZW50OiBzdHJpbmdcbn0gfCB7XG4gICAgdHlwZTogXCJ1c2VyX2lucHV0XCI7XG59IHwge1xuICAgIHR5cGU6IFwiZGVzdHJveS1wcm9tcHRcIjtcbn0gfCB7XG4gICAgdHlwZTogXCJkaXNwbGF5LWNvbW1hbmRcIjtcbiAgICBjb21tYW5kOiBzdHJpbmc7XG59IHwge1xuICAgIHR5cGU6IFwiY2xvc2VcIjtcbn1cblxuY29uc3QgUElQRV9OQU1FID0gXCJoYXNrZWxsLWRlYnVnXCI7XG5cbnZhciBjb25uZWN0aW9uUGF0aCA9IG9zLnBsYXRmb3JtKCkgPT0gXCJ3aW4zMlwiID9cbiAgICBcIlxcXFxcXFxcLlxcXFxwaXBlXFxcXFwiICsgUElQRV9OQU1FIDogYC90bXAvJHtQSVBFX05BTUV9LnNvY2tgO1xudmFyIGNsaWVudCA9IG5ldC5jb25uZWN0KGNvbm5lY3Rpb25QYXRoKTtcblxuY29uc3QgcmwgPSByZWFkbGluZS5jcmVhdGVJbnRlcmZhY2Uoe1xuICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluXG59KTtcblxudmFyIGlnbm9yZU91dHB1dCA9IGZhbHNlO1xuXG5ybC5vbihcImxpbmVcIiwgKHRleHQ6IHN0cmluZykgPT4ge1xuICAgIGlmKGlnbm9yZU91dHB1dCl7XG4gICAgICAgIGlnbm9yZU91dHB1dCA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNsaWVudC53cml0ZSh0ZXh0ICsgXCJcXG5cIik7XG59KVxuXG52YXIgdG90YWxEYXRhID0gXCJcIjtcbmNsaWVudC5vbihcImRhdGFcIiwgKGRhdGE6IEJ1ZmZlcikgPT4ge1xuICAgIG9uRGF0YShkYXRhLnRvU3RyaW5nKCkpO1xufSlcblxuZnVuY3Rpb24gb25EYXRhKGRhdGE6IHN0cmluZyl7XG4gICAgdmFyIG5ld0xpbmVQb3MgPSBkYXRhLmluZGV4T2YoXCJcXG5cIik7XG4gICAgaWYobmV3TGluZVBvcyAhPSAtMSl7XG4gICAgICAgIHRvdGFsRGF0YSArPSBkYXRhLnNsaWNlKDAsIG5ld0xpbmVQb3MpO1xuICAgICAgICBvbk1lc3NhZ2UoSlNPTi5wYXJzZSh0b3RhbERhdGEpKTtcbiAgICAgICAgdG90YWxEYXRhID0gXCJcIjtcbiAgICAgICAgb25EYXRhKGRhdGEuc2xpY2UobmV3TGluZVBvcyArIDEpKTtcbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgdG90YWxEYXRhICs9IGRhdGE7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBvbk1lc3NhZ2UobWVzc2FnZTogTWVzc2FnZSl7XG4gICAgaWYobWVzc2FnZS50eXBlID09IFwibWVzc2FnZVwiKXtcbiAgICAgICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUobWVzc2FnZS5jb250ZW50KTtcbiAgICB9XG4gICAgZWxzZSBpZihtZXNzYWdlLnR5cGUgPT0gXCJkaXNwbGF5LWNvbW1hbmRcIil7XG4gICAgICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKG1lc3NhZ2UuY29tbWFuZCArIFwiXFxuXCIpO1xuICAgICAgICBpZ25vcmVPdXRwdXQgPSB0cnVlO1xuICAgICAgICBybC53cml0ZShcIlxcblwiKTtcbiAgICB9XG4gICAgZWxzZSBpZihtZXNzYWdlLnR5cGUgPT0gXCJkZXN0cm95LXByb21wdFwiKXtcbiAgICAgICAgcmwuY2xvc2UoKTtcbiAgICB9XG4gICAgZWxzZSBpZihtZXNzYWdlLnR5cGUgPT0gXCJjbG9zZVwiKXtcbiAgICAgICAgcHJvY2Vzcy5leGl0KCk7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgIHJsLnByb21wdCgpO1xuICAgIH1cbn1cbiJdfQ==