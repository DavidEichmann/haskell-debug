"use strict";
const spacePen = require("atom-space-pen-views");
const React = require("./ReactPolyfill");
const atomAPI = require("atom");
class SelectDebugModeView extends spacePen.SelectListView {
    constructor(debugModes, activeItem) {
        super(debugModes, activeItem);
        this.debugModes = debugModes;
        this.activeItem = activeItem;
        this.emitter = new atomAPI.Emitter();
    }
    initialize(debugModes, activeItem) {
        this.debugModes = debugModes;
        this.activeItem = activeItem;
        super.initialize();
        this.storeFocusedElement();
        this.setItems(debugModes);
        const ol = this.element.querySelector('ol');
        if (ol) {
            ol.classList.add('mark-active');
        }
    }
    viewForItem(item) {
        const element = React.createElement("li", null, item.description);
        if (item.value === this.activeItem) {
            element.classList.add('active');
        }
        return element;
    }
    confirmed(item) {
        this.emitter.emit('selected', item.value);
        this.cancel();
    }
    cancelled() {
        this.emitter.emit('canceled');
    }
}
module.exports = SelectDebugModeView;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0RGVidWdNb2RlVmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvdmlld3MvU2VsZWN0RGVidWdNb2RlVmlldy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlEQUFpRDtBQUNqRCx5Q0FBeUM7QUFDekMsZ0NBQWdDO0FBT2hDLHlCQUEwQixTQUFRLFFBQVEsQ0FBQyxjQUFvQjtJQUczRCxZQUFxQixVQUFrQixFQUFVLFVBQWtCO1FBQy9ELEtBQUssQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUE7UUFEWixlQUFVLEdBQVYsVUFBVSxDQUFRO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBUTtRQUZuRSxZQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUE7SUFJL0IsQ0FBQztJQUVELFVBQVUsQ0FBRSxVQUFrQixFQUFFLFVBQWtCO1FBQzlDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFBO1FBQzVCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFBO1FBRTVCLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQTtRQUNsQixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQTtRQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ3pCLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQzNDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQTtRQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELFdBQVcsQ0FBRSxJQUFVO1FBQ25CLE1BQU0sT0FBTyxHQUFHLGdDQUFLLElBQUksQ0FBQyxXQUFXLENBQU0sQ0FBQTtRQUMzQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ25DLENBQUM7UUFDRCxNQUFNLENBQUMsT0FBTyxDQUFBO0lBQ2xCLENBQUM7SUFFRCxTQUFTLENBQUUsSUFBVTtRQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ3pDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQTtJQUNqQixDQUFDO0lBRUQsU0FBUztRQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ2pDLENBQUM7Q0FDSjtBQUVELGlCQUFTLG1CQUFtQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNwYWNlUGVuID0gcmVxdWlyZSgnYXRvbS1zcGFjZS1wZW4tdmlld3MnKVxuaW1wb3J0IFJlYWN0ID0gcmVxdWlyZSgnLi9SZWFjdFBvbHlmaWxsJylcbmltcG9ydCBhdG9tQVBJID0gcmVxdWlyZSgnYXRvbScpXG5cbmludGVyZmFjZSBJdGVtIHtcbiAgICB2YWx1ZTogc3RyaW5nXG4gICAgZGVzY3JpcHRpb246IHN0cmluZ1xufVxuXG5jbGFzcyBTZWxlY3REZWJ1Z01vZGVWaWV3IGV4dGVuZHMgc3BhY2VQZW4uU2VsZWN0TGlzdFZpZXc8SXRlbT4ge1xuICAgIGVtaXR0ZXIgPSBuZXcgYXRvbUFQSS5FbWl0dGVyKClcblxuICAgIGNvbnN0cnVjdG9yIChwcml2YXRlIGRlYnVnTW9kZXM6IEl0ZW1bXSwgcHJpdmF0ZSBhY3RpdmVJdGVtOiBzdHJpbmcpIHtcbiAgICAgICAgc3VwZXIoZGVidWdNb2RlcywgYWN0aXZlSXRlbSlcbiAgICB9XG5cbiAgICBpbml0aWFsaXplIChkZWJ1Z01vZGVzOiBJdGVtW10sIGFjdGl2ZUl0ZW06IHN0cmluZykge1xuICAgICAgICB0aGlzLmRlYnVnTW9kZXMgPSBkZWJ1Z01vZGVzXG4gICAgICAgIHRoaXMuYWN0aXZlSXRlbSA9IGFjdGl2ZUl0ZW1cblxuICAgICAgICBzdXBlci5pbml0aWFsaXplKClcbiAgICAgICAgdGhpcy5zdG9yZUZvY3VzZWRFbGVtZW50KClcbiAgICAgICAgdGhpcy5zZXRJdGVtcyhkZWJ1Z01vZGVzKVxuICAgICAgICBjb25zdCBvbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdvbCcpXG4gICAgICAgIGlmIChvbCkgeyBvbC5jbGFzc0xpc3QuYWRkKCdtYXJrLWFjdGl2ZScpIH1cbiAgICB9XG5cbiAgICB2aWV3Rm9ySXRlbSAoaXRlbTogSXRlbSkge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gPGxpPntpdGVtLmRlc2NyaXB0aW9ufTwvbGk+XG4gICAgICAgIGlmIChpdGVtLnZhbHVlID09PSB0aGlzLmFjdGl2ZUl0ZW0pIHtcbiAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZWxlbWVudFxuICAgIH1cblxuICAgIGNvbmZpcm1lZCAoaXRlbTogSXRlbSkge1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnc2VsZWN0ZWQnLCBpdGVtLnZhbHVlKVxuICAgICAgICB0aGlzLmNhbmNlbCgpXG4gICAgfVxuXG4gICAgY2FuY2VsbGVkICgpIHtcbiAgICAgICAgdGhpcy5lbWl0dGVyLmVtaXQoJ2NhbmNlbGVkJylcbiAgICB9XG59XG5cbmV4cG9ydCA9IFNlbGVjdERlYnVnTW9kZVZpZXdcbiJdfQ==